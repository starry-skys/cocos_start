{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","start","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","accLeft","d","accRight","KEY_UP","onLoad","jumpAction","node","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n\n    },\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n    },\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    setInputControl: function () {\n        var self = this;\n        // 添加键盘事件监听\n        // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.accLeft = true;\n                    break;\n                case cc.KEY.d:\n                    self.accRight = true;\n                    break;\n            }\n        });\n\n        // 松开按键时，停止向该方向的加速\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.accLeft = false;\n                    break;\n                case cc.KEY.d:\n                    self.accRight = false;\n                    break;\n            }\n        });\n    },\n\n    onLoad: function () {\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.jumpAction);\n\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n\n        // 初始化键盘输入监听\n        this.setInputControl();\n    },\n\n    update(dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}